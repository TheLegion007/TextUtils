{"version":3,"sources":["logo.svg","components/Navbar.js","components/About.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","react_router_dom","aria-current","to","aboutText","onClick","toggleMode","role","htmlFor","About","_useState","useState","color","backgroundColor","_useState2","Object","slicedToArray","myStyle","setMyStyle","_useState3","_useState4","btnText","setBtnText","style","aria-labelledby","data-bs-parent","border","TextForm","text","setText","heading","placeholder","value","onChange","event","target","rows","newText","toUpperCase","showAlert","toLowerCase","length","split","Alert","alert","word","lower","charAt","slice","capitalize","msg","defaultProps","App","setMode","setAlert","message","setTimeout","Fragment","document","body","react_router","exact","path","element","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.54a52c48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport {Link} from \"react-router-dom\"\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li>\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n          </form> */}\r\n          <div className={`form-check form-switch text-${props.mode=== 'light' ? 'dark' : 'light'}`}>\r\n            <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </nav>\r\n  )\r\n}\r\n\r\nNavbar.propTypes = {title : PropTypes.string.isRequired,\r\n                    aboutText : PropTypes.string.isRequired}\r\n\r\nNavbar.defaultProps = {title : \"Title\",\r\n                       aboutText : \"About Us\"\r\n}","import React , {useState} from 'react'\r\n\r\n\r\nexport default function About() {\r\n    const [myStyle, setMyStyle] = useState({\r\n        color: 'black',\r\n        backgroundColor : 'white'\r\n    }) ;\r\n    const [btnText, setBtnText] = useState(\"Enable Dark Mode\");\r\n\r\n    // let initialState = {\r\n    //     color: 'white',\r\n    //     backgroundColor : 'black'\r\n    // }\r\n    \r\n    // let finalState = {\r\n    //     color: 'black',\r\n    //     backgroundColor : 'white'\r\n    // }\r\n    \r\n    const toggleStyle = () => {\r\n        if(myStyle.color === 'black') {\r\n            setMyStyle( {\r\n                color: 'white',\r\n                backgroundColor : 'black',\r\n                border : '0.5px solid white'\r\n            })\r\n            setBtnText(\"Enable Light Mode\");\r\n        } \r\n        else {\r\n            setMyStyle({\r\n                color: 'black',\r\n                backgroundColor : 'white',\r\n               // border : '1px solid black'\r\n            })\r\n            setBtnText(\"Enable Dark Mode\");\r\n        }\r\n    }  \r\n  return (\r\n    <div className='container' style={myStyle}>\r\n        <h1 className='my-3'>About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\" style={myStyle}>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n                    Accordion Item #1\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"headingOne\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle} >\r\n                    <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingTwo\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n                    Accordion Item #2\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingTwo\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle} >\r\n                    <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"accordion-item\">\r\n                <h2 className=\"accordion-header\" id=\"headingThree\">\r\n                <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n                    Accordion Item #3\r\n                </button>\r\n                </h2>\r\n                <div id=\"collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"headingThree\" data-bs-parent=\"#accordionExample\">\r\n                <div className=\"accordion-body\" style={myStyle} >\r\n                    <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div className=\"container\">\r\n        <button type='button' onClick={toggleStyle} className='btn btn-primary'>{btnText}</button>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick =()=> {\r\n        //console.log(\"UpperCase was Clicked !!\" + text);\r\n        let newText =  text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Uppercase\", \"success\");\r\n    }\r\n    const handleLoClick =()=> {\r\n        //console.log(\"UpperCase was Clicked !!\" + text);\r\n        let newText =  text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to Lowercase\", \"success\");\r\n    }\r\n    const handleOnChange = (event)=> {\r\n        //console.log(\"OnChange was run\");\r\n        setText(event.target.value);    // to set the value user writing + previous string as well in text area //\r\n    }\r\n    const handleClearClick = ()=> {\r\n        let newText = \" \";\r\n        setText(newText);\r\n        props.showAlert(\"Text has been cleared\", \"success\");\r\n    }\r\n\r\n    const [text, setText] = useState('');     // text state created (use state hooks ), setText ek function hai to change state//\r\n    // text =  newtext ; wrong way of changing text //\r\n    //setText(\"newText\") ;  correct way of changing text //\r\n    return (\r\n    <div>\r\n        <div className=\"container\" style={{color: props.mode === 'dark' ? 'white' : '#042743'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n                <textarea className=\"form-control\" placeholder='Enter Text here' id=\"myBox\" value={text} onChange={handleOnChange}  style={{backgroundColor: props.mode === 'dark' ? 'grey' : 'white', color: props.mode === 'dark' ? 'white' : '#042743'}} rows=\"8\"></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n            <button className='btn btn-primary mx-2' onClick={handleClearClick}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color: props.mode === 'dark' ? 'white' : '#042743'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.length>0?text.split(\" \").length:0} Words, {text.length} Characters</p>\r\n            <p>{0.008*text.split(\" \").length} Minutes Read</p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0 ? text : 'Enter Something in the text to Preview'}</p>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    <div>\r\n        {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div> \r\n        }\r\n    </div>\r\n  )\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport About from './components/About';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link  \n} from 'react-router-dom';\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg : message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 2000);\n  } \n\n  const toggleMode =() => {\n    if(mode === 'light') {\n        setMode('dark');\n        document.body.style.backgroundColor = '#042743';\n        showAlert(\"Dark Mode has been enabled\",\"success\");\n    }\n    else {\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Light Mode has been enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n      {/*<Navbar title=\"TextUtils\" aboutText=\"TextAbout\"/> */}\n      <Router>\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} />\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n      <Routes>\n          <Route exact path=\"/\" element={<TextForm heading=\"Enter the text to Analyze below\" showAlert={showAlert} mode={mode} />}>\n          </Route>\n          <Route exact path=\"/about\" element={<About/>} >\n          </Route>\n        </Routes>\n        </div>\n        </Router>\n       {/* <About/> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}